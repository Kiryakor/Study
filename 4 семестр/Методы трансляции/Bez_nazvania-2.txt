%{ 
	#include <stdio.h> 
	#include <string.h> 

	void yyerror(char const* msg); 
	int yylex(); 
	int yyparse(); 
%} 

%union{string* c;} 
%type <c> S E T F 
%token ident 
%token badsym 

%% 
	word: | word line; 
	line: ident | 
	S ident { printf("Success!\n"); YYACCEPT; } | 
	badsym { printf("Syntax error!\n"); YYERROR;} | 
	error ident { YYABORT;}; 

S : E { printf("Result: %s", $1); }; 
E : E'+'T { 
	if ($1 == "" && $3 == "") 
		strcpy($$, "0"); 
	else if ($1 == "" && $3 != "") 
		strcpy($$, $3); 
	else if ($1 != "" && $3 == "") 
		strcpy($$, $1); 
	else 
		strcpy($$, $1); 
	strcat($$, "+"); 
	strcat($$, $3); 
}; 
E : T { strcpy($$, $1); }; 
T : T'*'F { 
	strcpy($$, $1); 
	strcat($$, "*"); 
	strcat($$, $3); 
	int cntr = 0; 
	for (int i = 0; i < strlen($$); ++i) { 
		if ($$[i] == 'x'){ 
			++cntr; 
		}
	} 
	strcat($$, "*"); 
	strcat($$, cntr + '0'); 
	int pos = -1; 
	for (int i = 0; i < strlen($$) - 1; ++i) { 
		if ($$[i] == 'x' && $$[i+1] == '*') { 
			pos = i; 
		} 
	} 
	if (pos != -1) { 
		int i; 
		for (i = pos; i < strlen($$) - 3; ++i) { 
			$$[i] = $$[i+2]; 
		} 
		$$[i+1] = '\0'; 
	$$[i+2] = '\0'; 
	} else { 
		for (int i = 0; i < strlen($$) - 1; ++i) { 
			if ($$[i] == '*' && $$[i+1] == 'x') { 
				pos = i; 
			} 
		} 
		if (pos != -1) { 
			int i; 
			for (i = pos; i < strlen($$) - 3; ++i) { 
				$$[i] = $$[i+2]; 
			} 
			$$[i+1] = '\0'; 
			$$[i+2] = '\0'; 
		} 
	} 
	if (pos == -1) { 
		$$ = ""; 
	} 
}; 
T : F { strcpy($$, $1); }; 
F : 'x' { strcpy($$, "x"); }; 
F : '5' { strcpy($$, "5"); }; 
F : '6' { strcpy($$, "6"); }; 
F : '('E')' { 
	strcpy($$, "("); 
	strcat($$, $2); 
	strcat($$, ")"); 
}; 

%% 
void yyerror(char const* msg) { printf("Syntax error!\n"); } 

int main() { 
	printf("Enter words:\n"); 
	while(1) { 
		yyparse(); 
	} 
	return 0; 
}